spread(sentiment, n, fill = 0) %>%
group_by(author, id) %>%
summarise(neg = sum(negative),
pos = sum(positive)) %>%
arrange(id) %>%
mutate(frac_neg = neg/(neg + pos)) %>%
ggplot(aes(frac_neg, fill = author)) +
geom_density(bw = .2, alpha = 0.3) +
theme(legend.position = "right") +
labs(x = "Fraction of negative words per sentence")
layout <- matrix(c(1,2),1,2,byrow=TRUE)
multiplot(p1, p2, layout=layout)
table(plot1, plot2)
summary(plot1)
summary(plot2)
table(plot2)
plot2
plot1
plot1 <- all_wrd %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
ggplot(aes(author, fill = sentiment)) +
geom_bar(position = "fill")
plot1
plot2 <- all_wrd %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(author, id, sentiment) %>%
count() %>%
spread(sentiment, n, fill = 0) %>%
group_by(author, id) %>%
summarise(fearsum = sum(fear),
sentimentsem = sum(anger+anticipation+disgust+joy+negative+positive+sadness+surprise+trust)) %>%
arrange(id) %>%
mutate(frac_fear = fearsum/(fearsum + sentimentsum)) %>%
ggplot(aes(frac_fear, fill = author)) +
geom_density(bw = .2, alpha = 0.3) +
theme(legend.position = "right") +
labs(x = "Fraction of fear words")
plot2 <- all_wrd %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
group_by(author, id, sentiment) %>%
count() %>%
spread(sentiment, n, fill = 0) %>%
group_by(author, id) %>%
summarise(fearsum = sum(fear),
sentimentsum = sum(anger+anticipation+disgust+joy+negative+positive+sadness+surprise+trust)) %>%
arrange(id) %>%
mutate(frac_fear = fearsum/(fearsum + sentimentsum)) %>%
ggplot(aes(frac_fear, fill = author)) +
geom_density(bw = .2, alpha = 0.3) +
theme(legend.position = "right") +
labs(x = "Fraction of fear words")
plot2
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100)
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.3, gridSize = 5.0)
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
w1 <- wordcloud(words_EAP, freqs_EAP, max.words = 100)
plot1
View(tidy_all)
View(all_wrd)
all_sentence <- anti_join(Q, stop_words, by = "word")
all_sentence <- anti_join(Q, stop_words)
all_sentence <- anti_join(Q, stop_words, by = "text")
all_sentence <- anti_join(Q, stop_words, by = "column")
View(Q)
stopwords(Q$text)
install.packages("stopwords", repos = "http://cran.us.r-project.org")
library(stopwords)
stopwords(Q$text)
require("tm")
removeWords(Q$text, stopwords)
str <- c("i have an apple")
removeWords(str, stopwords)
removeWords(Q, stopwords)
removeWords(Q$text, stopwords)
removeWords(Q$text, stopwords("en"))
tidy_sentence <- removeWords(Q$text, stopwords("en"))
View(tidy_EAP)
tidy_sentence <- Q(removeWords(Q$text, stopwords("en")))
install.packages("sentimentr",repos = "http://cran.us.r-project.org")
library(sentimentr)
mutate(sentiment = get_sentiment(text))
mutate(sentiment = get_sentiments(text))
mutate(sentiment = get_sentiments(tidy_sentence))
mutate(sentiment = get_sentiments(tidy_sentence$text))
mutate(sentiment = get_sentiments(Q))
mutate(sentiment = get_sentiments(Q$text))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
w1 <- wordcloud(words_EAP, freqs_EAP, max.words = 100, colors = col
sentiment = get_sentiments(Q$text))
sentiment = get_sentiments(Q$text))
sentiment = get_sentiments(Q$text)
sentiment = get_sentiments(all_wrd)
select(Q$text)
select(Q$text)
select(text)
install.packages("tidycerse",repos = "http://cran.us.r-project.org")
install.packages("tidyverse",repos = "http://cran.us.r-project.org")
library(tidyverse)
select(text)
select(Q$text)
Q[, 2]
sentence <- Q[, 2]
sentiment = get_sentiments(sentence)
sentiment = get_sentiments("sentence")
sentiment = get_sentiments("afinn")
tibble(text = sentence) %>%
unnest_tokens(sentence, text, token = "sentences")
plot3 <- sentence %>%
group_by(chapter) %>%
mutate(sentence_num = 1:n(),
index = round(sentence_num / n(), 2)) %>%
unnest_tokens(word, sentence) %>%
inner_join(get_sentiments("afinn")) %>%
group_by(chapter, index) %>%
summarise(sentiment = sum(score, na.rm = TRUE)) %>%
arrange(desc(sentiment))
plot3 <- sentence %>%
group_by(chapter) %>%
mutate(sentence_num = 1:n(),
index = round(sentence_num / n(), 2)) %>%
unnest_tokens(word, sentence) %>%
inner_join(get_sentiments("afinn")) %>%
summarise(sentiment = sum(score, na.rm = TRUE)) %>%
arrange(desc(sentiment))
plot3 <- sentence %>%
mutate(sentence_num = 1:n(),
index = round(sentence_num / n(), 2)) %>%
unnest_tokens(word, sentence) %>%
inner_join(get_sentiments("afinn")) %>%
summarise(sentiment = sum(score, na.rm = TRUE)) %>%
arrange(desc(sentiment))
plot3 <- sentence %>%
unnest_tokens(word, sentence) %>%
inner_join(get_sentiments("afinn")) %>%
summarise(sentiment = sum(score, na.rm = TRUE)) %>%
arrange(desc(sentiment))
plot3 <- sentence %>%
inner_join(get_sentiments("afinn")) %>%
summarise(sentiment = sum(score, na.rm = TRUE)) %>%
arrange(desc(sentiment))
sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
knitr::kable(format="html", booktabs = TRUE)
sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
knitr::kable(format="html", booktabs = TRUE)
sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
sentence
sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
sentence
sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
plot3 <- sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
plot3 <- sentence %>%
top_n(5, score_bing) %>%
select(text, author, score_bing) %>%
arrange(desc(score_bing)) %>%
slice(1:5) %>%
plot3
View(tidy_all)
tidy_all %>%
group_by(NAME) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("bing")) %>%
count(NAME, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ NAME, ncol = 2, scales = "free_x")
tidy_all %>%
group_by(author) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("bing")) %>%
count(NAME, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ NAME, ncol = 2, scales = "free_x")
tidy_all %>%
group_by(author) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("bing")) %>%
count(author, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ author, ncol = 2, scales = "free_x")
tidy_all %>%
group_by(author) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("affin")) %>%
count(author, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ author, ncol = 2, scales = "free_x")
tidy_all %>%
group_by(author) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("afinn")) %>%
count(author, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ author, ncol = 2, scales = "free_x")
tidy_all %>%
group_by(author) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("bing")) %>%
count(author, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ author, ncol = 2, scales = "free_x")
ggplot(aes(index,
factor(author, levels = sort(unique(author), decreasing = TRUE)),
fill = sentiment)) +
geom_tile(color = "white") +
scale_fill_gradient2() +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
labs(x = "Sentence", y = "Sentiment") +
ggtitle("Sentiment") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
#![Spooky Data Analysis](Crab.png)
#![Spooky Data Analysis](/Users/Clairiakong/Desktop/Spooky.PNG)
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.1)
summary(Q$author)
Q$author <- as.factor(Q$author)
summary(Q_EAP)
nrow(Q_MWS)
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, color = c("pink", "red4", "black"))
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, size = 0.1 color=c("pink", "red4", "brown"))
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, size = 0.1, color=c("pink", "red4", "brown"))
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, size = 0.1, color=c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 100, size = 0.1, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.1, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.1, color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 100, size = 0.05, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.05, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.05, color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 80, size = 0.05, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 80, size = 0.05, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 80, size = 0.05, color = c("pink", "red4", "brown"))
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, size = 0.1, color=c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 80, size = 0.01, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 80, size = 0.01, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 80, size = 0.01, color = c("pink", "red4", "brown"))
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, size = 0.1, color=c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 80, size = 0.01, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 80, size = 0.01, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 80, size = 0.01, color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 80, size = 0.008, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 80, size = 0.008, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 80, size = 0.008, color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 70, size = 0.008, color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 70, size = 0.008, color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 70, size = 0.008, color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 100, size = 0.008, scale=c(4,.5), color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.008, scale=c(4,.5), color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.008, scale=c(4,.5), color = c("pink", "red4", "brown"))
words_all <- count(group_by(all_wrd, word))$word
freqs_all <- count(group_by(all_wrd, word))$n
head(sort(freqs_all, decreasing = TRUE))
allcloud <- wordcloud(words_all, freqs_all, max.words = 100, size = 0.1, color=c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 100, size = 0.008, scale=c(4,.2), color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.008, scale=c(4,.2), color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.008, scale=c(4,.2), color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 100, size = 0.008, scale=c(4,.1), color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.008, scale=c(4,.1), color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.008, scale=c(4,.1), color = c("pink", "red4", "brown"))
words_EAP <- count(group_by(tidy_EAP, word))$word
freqs_EAP <- count(group_by(tidy_EAP, word))$n
head(sort(freqs_EAP, decreasing = TRUE))
wordcloud(words_EAP, freqs_EAP, max.words = 100, size = 0.008, scale=c(4,.1), color=c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.008, scale=c(4,.1), color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.008, scale=c(4,.1), color = c("pink", "red4", "brown"))
words_HPL <- count(group_by(tidy_HPL, word))$word
freqs_HPL <- count(group_by(tidy_HPL, word))$n
head(sort(freqs_HPL, decreasing = TRUE))
wordcloud(words_HPL, freqs_HPL, max.words = 100, size = 0.008, scale=c(4,.1), color = c("pink", "red4", "brown"))
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 0.008, scale=c(4,.1), color = c("pink", "red4", "brown"))
get_sentiments('nrc')
sentiments_EAP <- inner_join(tidy_EAP, get_sentiments('nrc'), by = "word")
count(sentiments_EAP, sentiment)
count(sentiments_EAP, author, sentiment)
ggplot(count(sentiments_EAP, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment))
nrc_fear <- filter(get_sentiments('nrc'), sentiment == "fear")
fear_EAP <- inner_join(tidy_EAP, nrc_fear, by = "word")
head(fear_EAP)
count(fear_EAP, word, sort = TRUE)
fear_HPL <- inner_join(tidy_HPL, nrc_fear, by = "word")
head(fear_HPL)
count(fear_HPL, word, sort = TRUE)
fear_EAP <- inner_join(tidy_EAP, nrc_fear, by = "word")
head(fear_EAP)
count(fear_EAP, word, sort = TRUE)
fear <- inner_join(tidy_all, nrc_fear, by = "word")
head(fear)
count(fear, word, sort = TRUE)
fear_words     <- count(group_by(fear, word, author))
fear_words_all <- count(group_by(fear, word))
fear_words <- left_join(fear_words, fear_words_all, by = "word")
fear_words <- arrange(fear_words, desc(n.y))
fear_words <- ungroup(head(fear_words, 81))
ggplot(fear_words) +
geom_col(aes(reorder(word, n.y, FUN = min), n.x, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
words_MWS <- count(group_by(tidy_MWS, word))$word
freqs_MWS <- count(group_by(tidy_MWS, word))$n
head(sort(freqs_MWS, decreasing = TRUE))
wordcloud(words_MWS, freqs_MWS, max.words = 100, size = 1, scale=c(4,.1), color = c("pink", "red4", "brown"))
ggplot(count(sentiments_MWS, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment))
plot1
plot2
plot1
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ author, ncol = 2, scales = "free_x")
tidy_all %>%
group_by(author) %>%
mutate(word_count = 1:n(),
index = word_count %/% 50 + 1) %>%
inner_join(get_sentiments("bing")) %>%
count(author, index = index , sentiment) %>%
ungroup() %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative) %>%
ggplot(aes(index, sentiment, fill = sentiment > 0)) +
geom_bar(alpha = 0.5, stat = "identity", show.legend = FALSE) +
facet_wrap(~ author, ncol = 2, scales = "free_x")
